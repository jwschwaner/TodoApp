@page "/todo"
@using Microsoft.AspNetCore.Authorization
@using System.Security.Claims
@using TodoApp.TodoData.Services
@attribute [Authorize]
@rendermode InteractiveServer
@inject CprService CprService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

<PageTitle>Todo - Blazor App</PageTitle>

<div class="container py-5">
    <div class="row">
        <div class="col-12">
            <div class="card shadow-sm">
                <div class="card-header bg-primary text-white">
                    <h3 class="mb-0"><i class="bi bi-check2-square me-2"></i>Todo List</h3>
                </div>
                <div class="card-body">
                    @if (_isLoading)
                    {
                        <div class="d-flex justify-content-center my-5">
                            <div class="spinner-border text-primary" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                        </div>
                    }
                    else
                    {
                        <p class="lead text-center my-5">
                            This is the Todo list page for future development.
                        </p>
                        <div class="text-center">
                            <p>Your CPR number: @_cprNumber</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private bool _isLoading = true;
    private string _userId = string.Empty;
    private string _cprNumber = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity?.IsAuthenticated == true)
        {
            _userId = user.FindFirst(ClaimTypes.NameIdentifier)?.Value ?? string.Empty;

            if (!string.IsNullOrEmpty(_userId))
            {
                var hasCpr = await CprService.HasCprAsync(_userId);

                if (!hasCpr)
                {
                    // Redirect to CPR registration page if missing
                    NavigationManager.NavigateTo("/cpr", true);
                    return;
                }

                var cpr = await CprService.GetCprAsync(_userId);
                if (cpr != null)
                {
                    _cprNumber = cpr.CprNr;
                }
            }
        }

        _isLoading = false;
    }
}

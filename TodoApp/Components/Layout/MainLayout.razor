@inherits LayoutComponentBase

@inject NavigationManager NavigationManager

<div class="page">
    <main>
        <div class="top-row px-4 justify-content-between">
            <div class="d-flex align-items-center">
                <a href="/todo" class="navbar-brand">
                    <i class="bi bi-check2-square me-2"></i>
                    <span class="fw-bold">Todo</span>
                </a>
                <AuthorizeView Roles="Admin">
                    <Authorized>
                        <a href="/admin/users" class="nav-link ms-3">
                            <i class="bi bi-people me-1"></i>
                            <span class="fw-bold">Users</span>
                        </a>
                    </Authorized>
                </AuthorizeView>
            </div>
            
            <AuthorizeView>
                <Authorized Context="authState">
                    <div class="d-flex align-items-center">
                        <div class="dropdown">
                            <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                <i class="bi bi-person-circle me-1"></i>
                                @(GetUserDisplayText(authState))
                            </a>
                            <ul class="dropdown-menu dropdown-menu-end">
                                <li>
                                    <NavLink class="dropdown-item" href="/Account/Manage">
                                        <i class="bi bi-gear me-2"></i> Manage Account
                                    </NavLink>
                                </li>
                                <li><hr class="dropdown-divider"></li>
                                <li>
                                    <form action="/Account/Logout" method="post">
                                        <AntiforgeryToken />
                                        <input type="hidden" name="returnUrl" value="@NavigationManager.ToBaseRelativePath(NavigationManager.Uri)" />
                                        <button type="submit" class="dropdown-item text-danger">
                                            <i class="bi bi-box-arrow-right me-2"></i> Logout
                                        </button>
                                    </form>
                                </li>
                            </ul>
                        </div>
                    </div>
                </Authorized>
                <NotAuthorized>
                    <div>
                        <a href="/Account/Register" class="btn btn-sm btn-outline-primary me-2">Register</a>
                        <a href="/Account/Login" class="btn btn-sm btn-primary">Login</a>
                    </div>
                </NotAuthorized>
            </AuthorizeView>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

<div id="blazor-error-ui" data-nosnippet>
    An unhandled error has occurred.
    <a href="." class="reload">Reload</a>
    <span class="dismiss">🗙</span>
</div>

<style>
    .top-row {
        background-color: #f8f9fa;
        border-bottom: 1px solid #dee2e6;
        height: 3.5rem;
        display: flex;
        align-items: center;
    }
    
    .page {
        position: relative;
        display: flex;
        flex-direction: column;
        min-height: 100vh;
    }
    
    main {
        flex: 1;
        display: flex;
        flex-direction: column;
    }
    
    .content {
        flex: 1;
    }
    
    .top-row {
        z-index: 1;
    }
    
    .nav-link {
        color: #495057;
        font-weight: 500;
    }
    
    .nav-link:hover {
        color: #0d6efd;
    }
    
    .dropdown-toggle::after {
        margin-left: 0.5em;
        vertical-align: 0.15em;
    }
    
    @@media (min-width: 768px) {
        article {
            padding-left: 2rem !important;
            padding-right: 1.5rem !important;
        }
    }
</style>

@code {
    private string GetUserDisplayText(AuthenticationState authState)
    {
        var username = authState.User.Identity?.Name ?? "User";
        var isAdmin = authState.User.IsInRole("Admin");
        return isAdmin ? $"{username} (Admin)" : username;
    }
}

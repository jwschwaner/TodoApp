<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/TodoApp/TodoData/Migrations/20250826190026_InitTodoContext.cs">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/TodoApp/TodoData/Migrations/20250826190026_InitTodoContext.cs" />
              <option name="originalContent" value="using System;&#10;using Microsoft.EntityFrameworkCore.Migrations;&#10;&#10;#nullable disable&#10;&#10;namespace TodoApp.TodoData.Migrations&#10;{&#10;    /// &lt;inheritdoc /&gt;&#10;    public partial class InitTodoContext : Migration&#10;    {&#10;        /// &lt;inheritdoc /&gt;&#10;        protected override void Up(MigrationBuilder migrationBuilder)&#10;        {&#10;            migrationBuilder.CreateTable(&#10;                name: &quot;Cprs&quot;,&#10;                columns: table =&gt; new&#10;                {&#10;                    UserId = table.Column&lt;string&gt;(type: &quot;text&quot;, nullable: false),&#10;                    CprNr = table.Column&lt;string&gt;(type: &quot;character varying(10)&quot;, maxLength: 10, nullable: false)&#10;                },&#10;                constraints: table =&gt;&#10;                {&#10;                    table.PrimaryKey(&quot;PK_Cprs&quot;, x =&gt; x.UserId);&#10;                    table.UniqueConstraint(&quot;AK_Cprs_CprNr&quot;, x =&gt; x.CprNr);&#10;                    table.CheckConstraint(&quot;CK_Cpr_CprNr_Format&quot;, &quot;CprNr ~ '^[0-9]{10}$'&quot;);&#10;                });&#10;&#10;            migrationBuilder.CreateTable(&#10;                name: &quot;Todos&quot;,&#10;                columns: table =&gt; new&#10;                {&#10;                    Id = table.Column&lt;Guid&gt;(type: &quot;uuid&quot;, nullable: false, defaultValueSql: &quot;gen_random_uuid()&quot;),&#10;                    CprNr = table.Column&lt;string&gt;(type: &quot;character varying(10)&quot;, nullable: false),&#10;                    Item = table.Column&lt;string&gt;(type: &quot;nvarchar(max)&quot;, nullable: false),&#10;                    IsDone = table.Column&lt;bool&gt;(type: &quot;boolean&quot;, nullable: false)&#10;                },&#10;                constraints: table =&gt;&#10;                {&#10;                    table.PrimaryKey(&quot;PK_Todos&quot;, x =&gt; x.Id);&#10;                    table.ForeignKey(&#10;                        name: &quot;FK_Todos_Cprs_CprNr&quot;,&#10;                        column: x =&gt; x.CprNr,&#10;                        principalTable: &quot;Cprs&quot;,&#10;                        principalColumn: &quot;CprNr&quot;,&#10;                        onDelete: ReferentialAction.Cascade);&#10;                });&#10;&#10;            migrationBuilder.CreateIndex(&#10;                name: &quot;IX_Cprs_CprNr&quot;,&#10;                table: &quot;Cprs&quot;,&#10;                column: &quot;CprNr&quot;,&#10;                unique: true);&#10;&#10;            migrationBuilder.CreateIndex(&#10;                name: &quot;IX_Todos_CprNr&quot;,&#10;                table: &quot;Todos&quot;,&#10;                column: &quot;CprNr&quot;);&#10;        }&#10;&#10;        /// &lt;inheritdoc /&gt;&#10;        protected override void Down(MigrationBuilder migrationBuilder)&#10;        {&#10;            migrationBuilder.DropTable(&#10;                name: &quot;Todos&quot;);&#10;&#10;            migrationBuilder.DropTable(&#10;                name: &quot;Cprs&quot;);&#10;        }&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="using System;&#13;&#10;using Microsoft.EntityFrameworkCore.Migrations;&#13;&#10;&#13;&#10;#nullable disable&#13;&#10;&#13;&#10;namespace TodoApp.TodoData.Migrations&#13;&#10;{&#13;&#10;    /// &lt;inheritdoc /&gt;&#13;&#10;    public partial class InitTodoContext : Migration&#13;&#10;    {&#13;&#10;        /// &lt;inheritdoc /&gt;&#13;&#10;        protected override void Up(MigrationBuilder migrationBuilder)&#13;&#10;        {&#13;&#10;            migrationBuilder.CreateTable(&#13;&#10;                name: &quot;Cprs&quot;,&#13;&#10;                columns: table =&gt; new&#13;&#10;                {&#13;&#10;                    UserId = table.Column&lt;string&gt;(type: &quot;text&quot;, nullable: false),&#13;&#10;                    CprNr = table.Column&lt;string&gt;(type: &quot;character varying(10)&quot;, maxLength: 10, nullable: false)&#13;&#10;                },&#13;&#10;                constraints: table =&gt;&#13;&#10;                {&#13;&#10;                    table.PrimaryKey(&quot;PK_Cprs&quot;, x =&gt; x.UserId);&#13;&#10;                    table.UniqueConstraint(&quot;AK_Cprs_CprNr&quot;, x =&gt; x.CprNr);&#13;&#10;                    table.CheckConstraint(&quot;CK_Cpr_CprNr_Format&quot;, &quot;\&quot;CprNr\&quot; ~ ''^[0-9]{10}$''&quot;);&#13;&#10;                });&#13;&#10;&#13;&#10;            migrationBuilder.CreateTable(&#13;&#10;                name: &quot;Todos&quot;,&#13;&#10;                columns: table =&gt; new&#13;&#10;                {&#13;&#10;                    Id = table.Column&lt;Guid&gt;(type: &quot;uuid&quot;, nullable: false, defaultValueSql: &quot;gen_random_uuid()&quot;),&#13;&#10;                    CprNr = table.Column&lt;string&gt;(type: &quot;character varying(10)&quot;, nullable: false),&#13;&#10;                    Item = table.Column&lt;string&gt;(type: &quot;nvarchar(max)&quot;, nullable: false),&#13;&#10;                    IsDone = table.Column&lt;bool&gt;(type: &quot;boolean&quot;, nullable: false)&#13;&#10;                },&#13;&#10;                constraints: table =&gt;&#13;&#10;                {&#13;&#10;                    table.PrimaryKey(&quot;PK_Todos&quot;, x =&gt; x.Id);&#13;&#10;                    table.ForeignKey(&#13;&#10;                        name: &quot;FK_Todos_Cprs_CprNr&quot;,&#13;&#10;                        column: x =&gt; x.CprNr,&#13;&#10;                        principalTable: &quot;Cprs&quot;,&#13;&#10;                        principalColumn: &quot;CprNr&quot;,&#13;&#10;                        onDelete: ReferentialAction.Cascade);&#13;&#10;                });&#13;&#10;&#13;&#10;            migrationBuilder.CreateIndex(&#13;&#10;                name: &quot;IX_Cprs_CprNr&quot;,&#13;&#10;                table: &quot;Cprs&quot;,&#13;&#10;                column: &quot;CprNr&quot;,&#13;&#10;                unique: true);&#13;&#10;&#13;&#10;            migrationBuilder.CreateIndex(&#13;&#10;                name: &quot;IX_Todos_CprNr&quot;,&#13;&#10;                table: &quot;Todos&quot;,&#13;&#10;                column: &quot;CprNr&quot;);&#13;&#10;        }&#13;&#10;&#13;&#10;        /// &lt;inheritdoc /&gt;&#13;&#10;        protected override void Down(MigrationBuilder migrationBuilder)&#13;&#10;        {&#13;&#10;            migrationBuilder.DropTable(&#13;&#10;                name: &quot;Todos&quot;);&#13;&#10;&#13;&#10;            migrationBuilder.DropTable(&#13;&#10;                name: &quot;Cprs&quot;);&#13;&#10;        }&#13;&#10;    }&#13;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../../docker-compose.yml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/../../docker-compose.yml" />
              <option name="updatedContent" value="version: '3.8'&#10;&#10;services:&#10;  postgres:&#10;    image: postgres:17-alpine&#10;    container_name: blazor-postgres&#10;    environment:&#10;      POSTGRES_PASSWORD: Password123!&#10;      POSTGRES_USER: postgres&#10;    ports:&#10;      - &quot;5432:5432&quot;&#10;    volumes:&#10;      - postgres-data:/var/lib/postgresql/data&#10;      - ./server/BlazorApp1/BlazorApp1/Infrastructure/Database/init-databases.sql:/docker-entrypoint-initdb.d/init-databases.sql&#10;    healthcheck:&#10;      test: [&quot;CMD-SHELL&quot;, &quot;pg_isready -U postgres&quot;]&#10;      interval: 5s&#10;      timeout: 5s&#10;      retries: 5&#10;&#10;volumes:&#10;  postgres-data:" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>